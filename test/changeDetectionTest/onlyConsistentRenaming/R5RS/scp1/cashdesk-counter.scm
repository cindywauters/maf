;; renamed lambdas/lets: 2
 
(define maak-teller (lambda ()
      (let ((result 0))
         (define toets (<change>
               (lambda (bedrag)
                  (set! result (+ result bedrag)))
               (lambda (_bedrag0)
                  (set! result (+ result _bedrag0)))))
         (define reset (lambda ()
               (set! result 0)))
         (define dispatch (lambda (msg)
               (if (eq? msg 'toets)
                  toets
                  (if (eq? msg 'lees)
                     result
                     (if (eq? msg 'reset)
                        (reset)
                        (error "wrong message"))))))
         dispatch)))
 
(define maak-winkelkassa (<change>
      (lambda ()
         (let ((saldo (maak-teller))
               (te-betalen (maak-teller))
               (ingetoetst 'product)
               (ontvangen 0))
            (define toets (lambda (type bedrag)
                  (set! ingetoetst type)
                  (if (eq? type 'product)
                     ((te-betalen 'toets) bedrag)
                     (if (eq? type 'ontvangen)
                        (set! ontvangen bedrag)
                        (error "wrong type")))))
            (define enter (lambda ()
                  (if (eq? ingetoetst 'product)
                     (te-betalen 'lees)
                     (let ((wisselgeld (- ontvangen (te-betalen 'lees))))
                        ((saldo 'toets) (te-betalen 'lees))
                        (te-betalen 'reset)
                        wisselgeld))))
            (define inhoud (lambda ()
                  (saldo 'lees)))
            (define afsluiten (lambda ()
                  (let ((teruggeven saldo))
                     (set! saldo 0)
                     teruggeven)))
            (define dispatch (lambda (msg)
                  (if (eq? msg 'toets)
                     toets
                     (if (eq? msg 'enter)
                        (enter)
                        (if (eq? msg 'inhoud)
                           (inhoud)
                           (if (eq? msg 'afsluiten)
                              (afsluiten)
                              (error "wrong message")))))))
            dispatch))
      (lambda ()
         (let ((_saldo0 (maak-teller))
               (_te-betalen0 (maak-teller))
               (_ingetoetst0 'product)
               (_ontvangen0 0))
            (define toets (lambda (_type0 _bedrag0)
                  (set! _ingetoetst0 _type0)
                  (if (eq? _type0 'product)
                     ((_te-betalen0 'toets) _bedrag0)
                     (if (eq? _type0 'ontvangen)
                        (set! _ontvangen0 _bedrag0)
                        (error "wrong type")))))
            (define enter (lambda ()
                  (if (eq? _ingetoetst0 'product)
                     (_te-betalen0 'lees)
                     (let ((_wisselgeld0 (- _ontvangen0 (_te-betalen0 'lees))))
                        ((_saldo0 'toets) (_te-betalen0 'lees))
                        (_te-betalen0 'reset)
                        _wisselgeld0))))
            (define inhoud (lambda ()
                  (_saldo0 'lees)))
            (define afsluiten (lambda ()
                  (let ((_teruggeven0 _saldo0))
                     (set! _saldo0 0)
                     _teruggeven0)))
            (define dispatch (lambda (_msg0)
                  (if (eq? _msg0 'toets)
                     toets
                     (if (eq? _msg0 'enter)
                        (enter)
                        (if (eq? _msg0 'inhoud)
                           (inhoud)
                           (if (eq? _msg0 'afsluiten)
                              (afsluiten)
                              (error "wrong message")))))))
            dispatch))))
 
(define teller (maak-teller))
 
(define winkelkassa (maak-winkelkassa))
 
((winkelkassa 'toets) 'product 20)
 
((teller 'toets) 20)
 
((winkelkassa 'toets) 'product 5)
 
(if (= (teller 'lees) 20)
   (if (begin (teller 'reset) (= (teller 'lees) 0))
      (if (= (winkelkassa 'enter) 25)
         (if (= (begin ((winkelkassa 'toets) 'product 10) (winkelkassa 'enter)) 35)
            (if (begin ((winkelkassa 'toets) 'ontvangen 50) (= (winkelkassa 'enter) 15))
               (= (winkelkassa 'inhoud) 35)
               #f)
            #f)
         #f)
      #f)
   #f)
 
